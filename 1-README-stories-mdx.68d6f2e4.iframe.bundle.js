/*! For license information please see 1-README-stories-mdx.68d6f2e4.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkreact_social_media_embed=self.webpackChunkreact_social_media_embed||[]).push([[836],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Ck:()=>withMDXComponents,Eh:()=>MDXContext,Iu:()=>MDXProvider,MN:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Qb:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Qb});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./src/stories/core/1.README.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>_1_README_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks_dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const READMEraw_namespaceObject='<h2 align="center">\r\n  üì∞ React Social Media Embed\r\n</h2>\r\n<h3 align="center">\r\n  Easily embed social media posts from Facebook, Instagram, LinkedIn, Pinterest, TikTok, X (Twitter), and YouTube in React.\r\n</h3>\r\n<p align="center">\r\n  <a href="https://badge.fury.io/js/react-social-media-embed" target="_blank" rel="noopener noreferrer"><img src="https://badge.fury.io/js/react-social-media-embed.svg" alt="npm Version" /></a>&nbsp;\r\n  <a href="https://github.com/justinmahar/react-social-media-embed/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/GitHub-Source-success" alt="View project on GitHub" /></a>&nbsp;\r\n  <a href="https://github.com/justinmahar/react-social-media-embed/actions?query=workflow%3ADeploy" target="_blank" rel="noopener noreferrer"><img src="https://github.com/justinmahar/react-social-media-embed/workflows/Deploy/badge.svg" alt="Deploy Status" /></a>\r\n</p>\r\n\x3c!-- [lock:donate-badges] üö´--------------------------------------- --\x3e\r\n<p align="center">\r\n  <a href="https://ko-fi.com/justinmahar"><img src="https://img.shields.io/static/v1?label=Buy%20me%20a%20coffee&message=%E2%9D%A4&logo=KoFi&color=%23fe8e86" alt="Buy me a coffee" /></a>&nbsp;<a href="https://github.com/sponsors/justinmahar" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="Sponsor"/></a>\r\n</p>\r\n\x3c!-- [/lock:donate-badges] ---------------------------------------üö´ --\x3e\r\n\r\n## Documentation\r\n\r\nRead the **[official documentation](https://justinmahar.github.io/react-social-media-embed/)**.\r\n\r\n## Overview\r\n\r\nEasily embed content from several popular social media platforms in React.\r\n\r\nAll embeds only require a URL to the post. No API token is needed.\r\n\r\nCurrently supporting: Facebook, Instagram, LinkedIn, Pinterest, TikTok, X (Twitter), and YouTube.\r\n\r\n### Features include:\r\n\r\n- **üöÄ Quick and easy**\r\n  - Embed content quickly and easily for the most popular social media platforms. Just provide a URL!\r\n- **üíÅ Live demos**\r\n  - Give the embeds a try and play with their props using live examples.\r\n- **‚öôÔ∏è Customizable**\r\n  - Each embed supports all div props and provides additional options, such as a placeholder.\r\n- **üí™ Resilient**\r\n  - If embedding fails, it automatically retries using a configurable retry delay.\r\n\r\n\x3c!-- [lock:donate] üö´--------------------------------------- --\x3e\r\n\r\n## Donate \r\n\r\nIf this project helped you, please consider buying me a coffee or sponsoring me. Your support is much appreciated!\r\n\r\n<a href="https://ko-fi.com/justinmahar"><img src="https://img.shields.io/static/v1?label=Buy%20me%20a%20coffee&message=%E2%9D%A4&logo=KoFi&color=%23fe8e86" alt="Buy me a coffee" /></a>&nbsp;<a href="https://github.com/sponsors/justinmahar" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="Sponsor"/></a>\r\n\r\n\x3c!-- [/lock:donate] ---------------------------------------üö´ --\x3e\r\n\r\n## Table of Contents\r\n\r\n- [Documentation](#documentation)\r\n- [Overview](#overview)\r\n  - [Features include:](#features-include)\r\n- [Donate](#donate)\r\n- [Table of Contents](#table-of-contents)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n  - [Facebook](#facebook)\r\n    - [How do you get a Facebook post URL?](#how-do-you-get-a-facebook-post-url)\r\n    - [IFrame Support](#iframe-support)\r\n  - [Instagram](#instagram)\r\n    - [How do you get an Instagram post URL?](#how-do-you-get-an-instagram-post-url)\r\n    - [IFrame Support](#iframe-support-1)\r\n  - [LinkedIn](#linkedin)\r\n    - [How do you get a LinkedIn post URL?](#how-do-you-get-a-linkedin-post-url)\r\n  - [Pinterest](#pinterest)\r\n    - [How do you get a Pinterest pin URL?](#how-do-you-get-a-pinterest-pin-url)\r\n  - [TikTok](#tiktok)\r\n    - [How do you get a TikTok post URL?](#how-do-you-get-a-tiktok-post-url)\r\n    - [IFrame Support](#iframe-support-2)\r\n  - [X (Twitter)](#x-twitter)\r\n    - [How do you get a X post URL?](#how-do-you-get-a-x-post-url)\r\n  - [YouTube](#youtube)\r\n    - [How do you get a YouTube video URL?](#how-do-you-get-a-youtube-video-url)\r\n  - [Placeholder](#placeholder)\r\n- [How It Works](#how-it-works)\r\n  - [Facebook](#facebook-1)\r\n  - [Instagram](#instagram-1)\r\n  - [LinkedIn](#linkedin-1)\r\n  - [Pinterest](#pinterest-1)\r\n  - [TikTok](#tiktok-1)\r\n  - [X (Twitter)](#x-twitter-1)\r\n  - [YouTube](#youtube-1)\r\n    - [Thumbnail Refetching](#thumbnail-refetching)\r\n- [TypeScript](#typescript)\r\n- [Icon Attribution](#icon-attribution)\r\n- [Contributing](#contributing)\r\n- [‚≠ê Found It Helpful? Star It!](#-found-it-helpful-star-it)\r\n- [License](#license)\r\n\r\n## Installation\r\n\r\n```\r\nnpm i react-social-media-embed\r\n```\r\n\r\n## Usage\r\n\r\n### Facebook\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-facebookembed--main-example)\r\n\r\n```jsx\r\nimport { FacebookEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <FacebookEmbed url="https://www.facebook.com/andrewismusic/posts/451971596293956" width={550} />\r\n</div>\r\n```\r\n\r\nThis will display the Facebook embed centered with a width of `550`.\r\n\r\nFor a live example and more options, read the [full documentation for FacebookEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-facebookembed--main-example).\r\n\r\n#### How do you get a Facebook post URL?\r\n\r\nFor the post you\'d like to embed, select `‚ãØ` ‚Ä∫ `Embed` ‚Ä∫ `Advanced settings` ‚Ä∫ `Get Code`, then use the `cite` link in the generated `blockquote`. \r\n\r\nSee [these instructions which include screenshots](https://github.com/justinmahar/react-social-media-embed/issues/14#issuecomment-1297458134) for more info.\r\n\r\n#### IFrame Support\r\n\r\nFor `iframe` support, you can provide `window` and `document` via the `frame` prop.\r\n\r\n### Instagram\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-instagramembed--main-example)\r\n\r\n```jsx\r\nimport { InstagramEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <InstagramEmbed url="https://www.instagram.com/p/CUbHfhpswxt/" width={328} />\r\n</div>\r\n```\r\n\r\nThis will display the Instagram embed centered with a width of `328`.\r\n\r\nFor a live example and more options, read the [full documentation for InstagramEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-instagramembed--main-example).\r\n\r\n#### How do you get an Instagram post URL?\r\n\r\nA few options:\r\n- Open a post and select `‚Ä¶` > `Copy Link`\r\n- Open a post in a browser window and copy the URL from the address bar. The URL should be in the format: `https://www.instagram.com/p/abc123xyzAB/`\r\n- Open a post and select `‚Ä¶` > `Embed` > `Copy embed code`. Paste the embed code in a text editor, then locate the `data-instgrm-permalink` attribute and use that link.\r\n\r\n#### IFrame Support\r\n\r\nFor `iframe` support, you can provide `window` and `document` via the `frame` prop.\r\n\r\n### LinkedIn\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-linkedinembed--main-example)\r\n\r\n```jsx\r\nimport { LinkedInEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <LinkedInEmbed \r\n    url="https://www.linkedin.com/embed/feed/update/urn:li:share:6898694772484112384"\r\n    postUrl="https://www.linkedin.com/posts/peterdiamandis_5-discoveries-the-james-webb-telescope-will-activity-6898694773406875648-z-D7"\r\n    width={325}\r\n    height={570} \r\n  />\r\n</div>\r\n```\r\n\r\nThis will display the LinkedIn embed centered with a width of `325` and height of `570`.\r\n\r\nFor a live example and more options, read the [full documentation for LinkedInEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-linkedinembed--main-example).\r\n\r\n#### How do you get a LinkedIn post URL?\r\n\r\nThe `url` must be be retrieved from the "Embed this post" option for the desired post. Use the `src` attribute of the `iframe`:\r\n\r\n```html\r\n<iframe src="https://www.linkedin.com/embed/feed/update/urn:li:share:6898694772484112384" height="570" width="325" frameborder="0" allowfullscreen="" title="Embedded post"></iframe>\r\n```\r\n\r\nIt is recommended that you specify the `width` and `height` of the post. These have been pre-calculated in the `iframe` embed code as well.\r\n\r\nYou can also specify a `postUrl` which will be used in the placeholder to link to the regular, non-embed version of the post.\r\n\r\n### Pinterest\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-pinterestembed--main-example)\r\n\r\n```jsx\r\nimport { PinterestEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <PinterestEmbed \r\n    url="https://www.pinterest.co.uk/pin/875105771321194304/"\r\n    width={345}\r\n    height={467}\r\n  />\r\n</div>\r\n```\r\n\r\nThis will display the Pinterest embed centered with a width of `345`. You can specify a `height` if you\'d like to adjust how much of the pin is vertically shown. See below for determining the correct `width` and `height` to use.\r\n\r\nFor a live example and more options, read the [full documentation for PinterestEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-pinterestembed--main-example).\r\n\r\n#### How do you get a Pinterest pin URL?\r\n\r\nVisit a Pinterest post in your browser. Copy the URL from the address bar.\r\n\r\nThe URL must contain the pin ID, in the format `pin/1234567890123456789`. Short links are not supported.\r\n\r\nIt is recommended that you specify the `width` and `height` of the post. These have been pre-calculated in the `iframe` embed code provided by Pinterest for the post.\r\n\r\nSelect the ellipsis `...` by the post and select "Get Pin embed code". Then use the `height` and `width` shown for the post you\'d like to embed.\r\n\r\n```html\r\n<iframe src="https://assets.pinterest.com/ext/embed.html?id=875105771321194304" height="467" width="345" frameborder="0" scrolling="no" ></iframe>\r\n```\r\n\r\n### TikTok\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-tiktokembed--main-example)\r\n\r\n```jsx\r\nimport { TikTokEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <TikTokEmbed url="https://www.tiktok.com/@epicgardening/video/7055411162212633903" width={325} />\r\n</div>\r\n```\r\n\r\nThis will display the TikTok embed centered with a width of `325`.\r\n\r\nFor a live example and more options, read the [full documentation for TikTokEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-tiktokembed--main-example).\r\n\r\n#### How do you get a TikTok post URL?\r\n\r\nOpen a post in your browser. The post URL will be shown. Click the `Copy Link` button.\r\n\r\nThe URL must contain the video ID, in the format `https://www.tiktok.com/@username/video/1234567890123456789`. Short links are not supported.\r\n\r\n#### IFrame Support\r\n\r\nFor `iframe` support, you can provide `window` and `document` via the `frame` prop.\r\n\r\n### X (Twitter)\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-twitterembed--main-example)\r\n\r\n```jsx\r\nimport { XEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <XEmbed url="https://twitter.com/PixelAndBracket/status/1356633038717923333" width={325} />\r\n</div>\r\n```\r\n\r\nThis will display the X embed centered with a width of `325`.\r\n\r\nThis component uses the [`react-twitter-embed`](https://www.npmjs.com/package/react-twitter-embed) package to embed content. You can specify props for the internal [`TwitterTweetEmbed`](https://github.com/saurabhnemade/react-twitter-embed#usage) component via the `twitterTweetEmbedProps` prop.\r\n\r\nFor a live example and more options, read the [full documentation for XEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-xembed--main-example).\r\n\r\n#### How do you get a X post URL?\r\n\r\nOpen an X post in a browser window. Copy the link to the post from the address bar.\r\n\r\nThe URL must contain the post ID, in the format `https://twitter.com/username/status/1234567890123456789`. Short links are not supported.\r\n\r\nAlternate option: Select `‚Ä¶` > `Embed¬†Post`, and use the `a href` attribute value from the provided embed code.\r\n\r\n### YouTube\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-youtubeembed--main-example)\r\n\r\n```jsx\r\nimport { YouTubeEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\n```jsx\r\n<div style={{ display: \'flex\', justifyContent: \'center\' }}>\r\n  <YouTubeEmbed url="https://www.youtube.com/watch?v=HpVOs5imUN0" width={325} height={220} />\r\n</div>\r\n```\r\n\r\nThis will display the YouTube embed centered with a width of `325` and height of `220`.\r\n\r\nThis component uses the [`react-youtube`](https://www.npmjs.com/package/react-youtube) package to embed content. You can specify props for the internal [`YouTube`](https://github.com/tjallingt/react-youtube#usage) component via the `youTubeProps` prop.\r\n\r\nFor a live example and more options, read the [full documentation for YouTubeEmbed](https://justinmahar.github.io/react-social-media-embed/?path=/docs/embeds-youtubeembed--main-example).\r\n\r\n#### How do you get a YouTube video URL?\r\n\r\nOpen the video in a browser window. Copy the URL from the address bar. You can also click `Share` > `Copy`.\r\n\r\nThe URL must be in the format `https://www.youtube.com/watch?v=VIDEO_ID` or `https://youtu.be/VIDEO_ID` where `VIDEO_ID` is the video ID.\r\n\r\nYouTube Shorts are also supported. For shorts, the URL must be in the format `https://youtube.com/shorts/VIDEO_ID`.\r\n\r\n### Placeholder\r\n\r\n[üëÅÔ∏è View Demo](https://justinmahar.github.io/react-social-media-embed/?path=/docs/placeholder-placeholderembed--main-example)\r\n\r\n```jsx\r\nimport { PlaceholderEmbed } from \'react-social-media-embed\';\r\n```\r\n\r\nA placeholder is shown while loading. If you do not specify a placeholder via the `embedPlaceholder` prop, a default `PlaceholderEmbed` placeholder component will be used. You can disable the placeholder with the `placeholderDisabled` prop. \r\n\r\nThe default placeholder will size itself according to the width and/or height you specify for the embed. If none are specified, it will fall back to a default size appropriate for the given social media platform. You can pass custom props (such as `style`) to the default placeholder via `placeholderProps` to override any default behavior.\r\n\r\nIf you\'d like, you can specify the  `placeholderImageUrl` prop to any of the embeds to show a placeholder with the provided image. \r\n\r\nBy default, the placeholder spinner is a `BorderSpinner` with a width/height of `10` and 25% transparent black border of `3px`. You can specify the `placeholderSpinner` prop to provide your own custom spinner, and the `placeholderSpinnerDisabled` prop to remove the placeholder spinner altogether.\r\n\r\nSee the [PlaceholderEmbed docs](https://justinmahar.github.io/react-social-media-embed/?path=/docs/placeholder-placeholderembed--main-example) for examples and more.\r\n\r\n## How It Works\r\n\r\nEach embed has a slightly different implementation. I\'ve tried my best to standardize the embed experience for each from a developer standpoint so you don\'t have to think about how it performs the embed. \r\n\r\nIf you\'re curious how the embeds happen, read on!\r\n\r\n### Facebook\r\n\r\nWe use the [Facebook JavaScript SDK](https://developers.facebook.com/docs/plugins/embedded-posts/) to embed content.\r\n\r\nThis loads a script which initializes the Facebook embedder to `window.FB.XFBML`.\r\n\r\nA Facebook post uses the following form:\r\n\r\n```html\r\n<div class="fb-post" data-href="{your-post-url}"></div>\r\n```\r\n\r\nWe then use the [`FB.XFBML.parse()`](https://developers.facebook.com/docs/reference/javascript/FB.XFBML.parse/) function to manually initialize the embed HTML.\r\n\r\n### Instagram\r\n\r\nWe use the [Instagram embed.js JavaScript library](https://developers.facebook.com/docs/plugins/embedded-posts/) to embed content. In the documentation, you can refer to the section titled "Embed JS" for details.\r\n\r\nThis loads a script which initializes the Instagram embedder to `window.instgrm.Embeds`.\r\n\r\nAn Instagram post uses the following form:\r\n\r\n```html\r\n<blockquote class="instagram-media"\r\n            data-instgrm-permalink="{your-post-url}"\r\n            data-instgrm-version="14">\r\n  <div>Placeholder</div>\r\n</blockquote>\r\n```\r\n\r\nWe then use the [`instgrm.Embeds.process()`](https://developers.facebook.com/docs/instagram/oembed/) function to manually initialize the embed HTML.\r\n\r\n### LinkedIn\r\n\r\nLinkedIn does not have an embed JS library, unfortunately. So we use a simple `iframe` with the embed URL from LinkedIn\'s embed option, which is accessed via the menu next to any given post that has embedding allowed. If a post does not have embedding allowed, this option will not appear.\r\n\r\nLinkedIn provides you with an `iframe` with an `src` attribute and the calculated `width` and `height`. Use these attributes for your embed.\r\n\r\n### Pinterest\r\n\r\nWe use a simple `iframe` with the URL of the Pinterest pin you\'d like to embed.\r\n\r\nPinterest provides you with embed code containing an `iframe` with the calculated `width` and `height`. The embed code is accessed via the menu next to any given pin that has embedding allowed. Use these `width` and `height` attributes for your embed.\r\n\r\n### TikTok\r\n\r\nWe use the [TikTok embed.js JavaScript library](https://developers.tiktok.com/doc/embed-videos) to embed content. \r\n\r\nThis loads a [script](https://www.tiktok.com/embed.js) which initializes the TikTok embedder to `window.tiktokEmbed`.\r\n\r\nA TikTok post uses the following form:\r\n\r\n```html\r\n<blockquote class="tiktok-embed" cite="{your-post-url}" data-video-id="{video-id}">\r\n  <div>Placeholder</div>\r\n</blockquote>\r\n```\r\n\r\nUnfortunately, unlike Facebook and Instagram, there is no documented or obvious way to manually initialize the embed HTML. **[If you know how to do this, please open a GitHub issue with the info!](https://github.com/justinmahar/react-social-media-embed/issues/new)**\r\n\r\nSo, in order to initialize the embed HTML, we must load the embed script from TikTok every time we render the TikTok embed. To do this, we use time-based query param cache busting and replace the embed.js script element in the `head` node. This forces the browser to load the script anew each time, which then performs the embed.\r\n\r\nFor example, here\'s the script element with `t` as the current time:\r\n\r\n```html\r\n<script src="https://www.tiktok.com/embed.js?t=1645275849920" id="tiktok-embed-script"><\/script>\r\n```\r\n\r\nAgain, if there\'s a way to manually initialize the embed HTML through the already-loaded script, please [open an issue](https://github.com/justinmahar/react-social-media-embed/issues/new) so this can be improved. For now, this gets the job done!\r\n\r\n### X (Twitter)\r\n\r\nWe use the [`react-twitter-embed`](https://www.npmjs.com/package/react-twitter-embed) package to embed X posts. This completely amazing package does all the heavy lifting. Please consider supporting the project.\r\n\r\nYou can specify props for the internal [`TwitterTweetEmbed`](https://github.com/saurabhnemade/react-twitter-embed#usage) component via the `twitterTweetEmbedProps` prop.\r\n\r\n### YouTube\r\n\r\nWe use the [`react-youtube`](https://www.npmjs.com/package/react-youtube) package to embed YouTube videos. This incredibly awesome package does all the heavy lifting. Please consider supporting the project.\r\n\r\nYou can specify props for the internal [`YouTube`](https://github.com/tjallingt/react-youtube#usage) component via the `youTubeProps` prop.\r\n\r\n#### Thumbnail Refetching\r\n\r\nIf you have problems with pixelated thumbnails, try this solution to trigger thumbnail refetching:\r\n\r\n```jsx\r\nconst YOUTUBE_DEFAULT_HEIGHT = 390;\r\nconst [embedHeight, setEmbedHeight] = React.useState(YOUTUBE_DEFAULT_HEIGHT);\r\n\r\n<YouTubeEmbed\r\n  height={embedHeight}\r\n  youTubeProps={{\r\n    onReady: async (r) =>\r\n      (await r.target.getIframe()).addEventListener(\'load\', () => setEmbedHeight((height) => height + 1)),\r\n  }}\r\n/>\r\n```\r\n\r\n\x3c!-- [lock:typescript] üö´--------------------------------------- --\x3e\r\n\r\n## TypeScript\r\n\r\nType definitions have been included for [TypeScript](https://www.typescriptlang.org/) support.\r\n\r\n\x3c!-- [/lock:typescript] ---------------------------------------üö´ --\x3e\r\n\r\n\x3c!-- [lock:icon] üö´--------------------------------------- --\x3e\r\n\r\n## Icon Attribution\r\n\r\nFavicon by [Twemoji](https://github.com/twitter/twemoji).\r\n\r\n\x3c!-- [/lock:icon] ---------------------------------------üö´ --\x3e\r\n\r\n\x3c!-- [lock:contributing] üö´--------------------------------------- --\x3e\r\n\r\n## Contributing\r\n\r\nOpen source software is awesome and so are you. üòé\r\n\r\nFeel free to submit a pull request for bugs or additions, and make sure to update tests as appropriate. If you find a mistake in the docs, send a PR! Even the smallest changes help.\r\n\r\nFor major changes, open an issue first to discuss what you\'d like to change.\r\n\r\n\x3c!-- [/lock:contributing] --------------------------------------üö´ --\x3e\n\r\n## ‚≠ê Found It Helpful? [Star It!](https://github.com/justinmahar/react-social-media-embed/stargazers)\r\n\r\nIf you found this project helpful, let the community know by giving it a [star](https://github.com/justinmahar/react-social-media-embed/stargazers): [üëâ‚≠ê](https://github.com/justinmahar/react-social-media-embed/stargazers)\r\n\r\n## License\r\n\r\nSee [LICENSE.md](https://justinmahar.github.io/react-social-media-embed/?path=/docs/license--docs).\r\n';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.Qb,{title:"Home"}),"\n",(0,jsx_runtime.jsx)(blocks_dist.Ih,{children:READMEraw_namespaceObject})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Home",tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.MN)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}};const _1_README_stories=componentMeta,__namedExportsOrder=["__page"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);